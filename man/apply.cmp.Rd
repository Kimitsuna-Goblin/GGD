% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggd.apply.R
\name{apply.cmp}
\alias{apply.cmp}
\alias{\S4method{apply.cmp}{GGD}}
\title{Apply functions to elements of cmp}
\usage{
\S4method{apply.cmp}{GGD}(f.mean = NULL, f.sd = NULL)
}
\arguments{
\item{f.mean}{A function to apply to elements in \code{mean} column.
If \code{NULL}, nothing is applied.}

\item{f.sd}{A function to apply to elements in \code{sd} column.
If \code{NULL}, nothing is applied.
See "Details" for more information.}
}
\value{
The processed \code{\link[ggd]{GGD}} object itself (invisible).
}
\description{
Applies a function to each element in the \code{cmp} field.
Different functions can be applied to \code{mean} column and \code{sd} column.
Other fields will be adjusted accordingly.
}
\details{
Each function indicated with \code{f.mean} or \code{f.sd} can receive
     2 arguments (each argument name is arbitrary):
     \enumerate{
         \item A vector of the current values of \code{mean} or \code{sd} column.
         \item The \code{\link[ggd]{GGD}} object itself to be processed.
     }
     Therefore, the function for \code{f.mean} or \code{f.cmp} is hoped to be
     declared with 2 arguments like as "\code{function(mean, obj)}",
     however, if the function do not need the 2nd argument,
     you can declare with 1 arguments
     like as "\code{function(mean)}" or "\code{function(sd)}".
     For the values of the functions, each function must return a numeric vector
     with the same length of the 1st argument as new values of each column.

     After both functions have been processed, the new values are actually
     set into the \code{cmp} field. Therefore, from within the functions to apply,
     it is possible to refer to the values of each field before applying,
     but not after.

     Moreover, if an error occurs at \code{f.mean} or \code{f.sd},
     this method does not clear the object,
     but retains the values of all fields before the method is called.

     The 2nd argument, which is the \code{\link[ggd]{GGD}} object itself, should be used for
     reference only, and it is not recommended to update the fields of it.
     The results of such updating are not guaranteed.
     It is strongly recommended NOT to use methods which return
     the object itself
     (e.g., \code{\link[ggd]{adjust.cmp}}, \code{\link[ggd]{round.cmp}}, etc.)
     for the object of the 2nd argument, since they may update the values of the fields.

     This function does not change the number of rows of the \code{cmp} field,
     no matter what results are obtained.
}
\examples{
 a <- ggd.set.cmp( data.frame( mean = c( -0.5, 0, 0.5 ), sd = c( 1, 0.8, 1.2 ) ) )
 a$cmp; c( a$mean, a$sd )
 ## +1 to mean.
 a$apply.cmp( function( mean ) mean + 1 )
 a$cmp; c( a$mean, a$sd )
 ## double sd of 2nd component.
 a$apply.cmp( f.sd = function( sd ) { sd[2] <- sd[2] * 2; sd } )
 a$cmp; c( a$mean, a$sd )
 ## rotate as index+1 for mean and index-1 for sd.
 a$apply.cmp( f.mean = function( mean ) mean[c( 2, 3, 1 )],
              f.sd = function( sd ) sd[c( 3, 1, 2 )] )
 a$cmp; c( a$mean, a$sd )
 ## swap mean and sd.
 a$apply.cmp( f.mean = function( m, obj ) obj$cmp$sd,
              f.sd = function( s, obj ) obj$cmp$mean )
 a$cmp; c( a$mean, a$sd )
}
\seealso{
\code{\link[ggd]{round.cmp}}
}
