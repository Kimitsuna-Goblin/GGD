% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GGD.R
\name{tex}
\alias{tex}
\alias{tex.d}
\alias{tex.p}
\alias{\S4method{tex}{GGD}}
\alias{\S4method{tex.d}{GGD}}
\alias{\S4method{tex.p}{GGD}}
\title{Output TeX format}
\usage{
\S4method{tex}{GGD}(con = stdout(), sep = "\n", comma = TRUE,
         format.num = function(x) format(x),
         frac.env = c("array", "aligned", "gathered", "default"))

\S4method{tex.d}{GGD}(con = stdout(), sep = "\n", comma = TRUE,
         format.num = function(x) format(x),
         frac.env = c("array", "aligned", "gathered", "default"))

\S4method{tex.p}{GGD}(con = stdout(), sep = "\n", comma = TRUE,
         format.num = function(x) format(x),
         frac.env = c("array", "aligned", "gathered", "default"))
}
\arguments{
\item{con}{A \code{\link[base]{connection}} object or a character to indicate
the output destination.
See "Details" at \code{\link[base]{writeLines}}
for more information.}

\item{sep}{A string to be written to the connection after each line of text.
See "Details" at \code{\link[base]{writeLines}}
for more information.}

\item{comma}{A logical. If \code{TRUE}, this method writes "," as a separator
between each expression and "." at the end of output.
If \code{FALSE}, "," for the separator of expressions
and the final "." are not written.}

\item{format.num}{A function to format each number of value of a parameter;
mean value and standard deviation.
It should be a function with one argument for the number
to be displayed and returning a character string.}

\item{frac.env}{The TeX environment for formatting fractions with different heights
of numerator and denominator.
If \code{"default"}, such fractions will be formatted as default of TeX
(usually not so beautiful). Which environment is the most beautiful
form will depend on the TeX execution environment.}
}
\value{
An invisible NULL.
}
\description{
Outputs the TeX-formatted texts of the formulas for the probability density function
\eqn{g(x)} and the cumulative distribution function \eqn{\Psi(x)}
with \code{\link[base]{writeLines}}.
}
\details{
\subsection{Composition of outputs}{
     \code{tex} outputs the formulas of both probability density function
     and cumulative distribution function.

     Where \code{mix.type} field is from \code{0} to \code{3},
     this function outputs 3 parts divided with one empty line as:
     \itemize{
         \item Fomulas of the probability density function \eqn{g(x)}
             and the cumulative distribution function \eqn{\Psi(x)} of the model.
         \item Fomulas of the probability density function \eqn{f_i(x)}
             and the cumulative distribution function \eqn{\Phi_i(x)} of the components.
         \item Values of parameters of the mean values \eqn{\mu_i} and
             the standard deviations \eqn{\sigma_i} of the components.
     }

     Where \code{mix.type = 4},
     the formulas of \eqn{g(x)} and \eqn{\Psi(x)} are divided into 2 parts in addition,
     and subscripts for \eqn{f(x)}, \eqn{\Phi(x)} and parameters are 2 like \eqn{f_{i,j}(x)}.

     \code{tex.d} outputs the formulas of probability density function only.

     \code{tex.p} outputs the formulas of cumulative distribution function only.

     In these mothods, the formulas are output according to \code{mix.type}
     and the number of components in \code{cmp} field, not \code{kind} or \code{kind.index}.
     That is, for example, if the \code{kind} is \code{"Normal Distribution"}
     and \code{mix.type = 2},
     \code{tex} outputs fomulas of a horizontal gradational distribution.
     In such a case, if you want to display a normal distribution formula,
     you should simplify \code{mix.type} with \code{\link[ggd]{adjust.cmp}} in advance.

     If \code{cmp} field has no rows, nothing is output.
 }

 \subsection{Equaled mean values or standard deviations}{
     For clarity, when all mean values or standard deviations of components are equal
     (i.e., when \code{\link[ggd]{is.eq.mean}} or \code{\link[ggd]{is.eq.sd}} method
     returns \code{TRUE}), they are displayed with \eqn{=} to the 1st component parameter,
     like as \eqn{\sigma_2 = \sigma_1}.

     If only the values of some parameters are equal (e.g., only \eqn{\sigma_2} and
     \eqn{\sigma_3} are equal and \eqn{\sigma_1} is different),
     they are not displayed as \eqn{\sigma_3 = \sigma_2}, but displayed with values
     to avoid misreading the subscripts.

     Note that if the difference between the values of parameters is smaller than
     the number of decimal places displayed, \eqn{\sigma_2 = \sigma_1} may not be displayed,
     but the same number may be displayed for each.
 }
}
\examples{
 a <- GGD$new()
 a$set.cmp( data.frame( mean = c( 0.018205, -0.011362 ),
                          sd = c( 1.131168,  0.705948 ) ),
            this.mix.type = 2 )
 a$tex()
 a$tex.d()
 a$tex.p()

 a$set.cmp( data.frame( mean = c( 1.2658, -0.5 ),
                          sd = c( 2.7,    1.206879 ) ),
            this.mix.type = 3 )
 a$tex( comma = FALSE, format.num = function(x) format(x, digits = 3) )
 a$tex.d( comma = FALSE, format.num = function(x) as.character(x) )
 a$tex.p( comma = FALSE, format.num = function(x) sprintf("\%.3f", x), frac.env = "aligned" )
}
\seealso{
\code{\link[ggd]{adjust.cmp}}, \code{\link[ggd]{tex.d}}, \code{\link[ggd]{tex.p}}
}
